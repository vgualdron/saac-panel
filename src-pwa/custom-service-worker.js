import { precacheAndRoute } from 'workbox-precaching';
// Precaching the files generated by Workbox
precacheAndRoute(self.__WB_MANIFEST);
importScripts('https://cdn.onesignal.com/sdks/OneSignalSDKWorker.js');
import { register } from 'register-service-worker';
import { Notify } from 'quasar';
// The ready(), registered(), cached(), updatefound() and updated()
// events passes a ServiceWorkerRegistration instance in their arguments.
// ServiceWorkerRegistration: https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration

register(process.env.SERVICE_WORKER_FILE, {
  // The registrationOptions object will be passed as the second argument
  // to ServiceWorkerContainer.register()
  // https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register#Parameter

  // registrationOptions: { scope: './' },
  ready(/* registration */) {
    console.log('Service worker is active');
  },
  registered(/* registration */) {
    console.log('Service worker has been registered.');
  },
  cached(/* registration */) {
    console.log('Content has been cached for offline use.');
  },
  updatefound(/* registration */) {
    console.log('New content is downloading.');
  },
  updated(/* registration */) {
    console.log('New content is available; please refresh.!');
    const version = localStorage.getItem('versionApp');
    console.log(process.env.LATEST_VERSION_APP);
    console.log(version);
    // if (version !== process.env.LATEST_VERSION_APP) {
    Notify.create({
      message: `Hay una versión más reciente que la ${process.env.LATEST_VERSION_APP}, se actualizará automaticamente en un momento`,
      icon: 'cloud_download',
      color: 'green',
      timeout: 5000,
      textColor: 'white',
      classes: 'glossy',
      progress: true,
      onDismiss() {
        window.location.reload(true);
      },
    });
    // }
    localStorage.setItem('versionApp', process.env.LATEST_VERSION_APP);
  },
  offline() {
    console.log('No internet connection found. App is running in offline mode.');
  },
  error(err) {
    console.error('Error during service worker registration:', err);
  },
});
